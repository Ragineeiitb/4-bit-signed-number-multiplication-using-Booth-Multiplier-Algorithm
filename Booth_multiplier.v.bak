module Booth_multiplier(input clk,reset,start,input signed  [3:0] A,input signed [3:0] B,output  signed reg [7:0]C,output reg valid);
reg signed [7:0] C_next,C_tmp;
reg next_state,state;
reg [1:0]tmp,n_tmp;
reg [1:0] count,n_count;
reg valid,n_valid;

parameter IDLE=0;
parameter START=1;

always@(*)
begin
case(state)
IDLE:
begin 
n_count=2'b0;
n_valid=1'b0;
		if(start)
		begin
		next_state=START;
		n_tmp={A[0],1'b0};
		C_next=











 always @(posedge clk )
 begin 
if (reset)
        begin
		  C<=8'b0;
		  valid<=8'b0;
		  state<=1'b0;
		  tmp<=2'd0;
		  n_tmp<=2'd0;
		  count<=2'd0;
		  end
		  else begin
		  
